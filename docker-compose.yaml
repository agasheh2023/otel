version: "3.9"

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.24
    configs:
      - source: nginx-config
        target: /etc/nginx/conf.d/reverse-proxy.conf
    ports:
      - "8080:80"  # HTTP Access
    volumes:
      - /dev/null:/etc/nginx/nginx.conf:ro
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      - observability

  # Elasticsearch (Database for Logs and Traces)
  elasticsearch:
    image: elasticsearch:8.10.1
    restart: always
    environment:
      discovery.type: single-node
      cluster.name: elasticsearch-clusternode
      node.name: es-node
      xpack.security.enabled: "false"
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - /docker-data/elastic-data:/usr/share/elasticsearch/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.db-node == true
    networks:
      - observability

  # VictoriaMetrics (Metrics Storage)
  victoria-metrics:
    image: victoriametrics/victoria-metrics:v1.105.0
    restart: always
    command:
      - "--storageDataPath=/storage"
    volumes:
      - /docker-data/victoria-data:/storage
    ports:
      - "8428:8428"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.db-node == true
    networks:
      - observability

  # Prometheus (Metrics Analyzer)
  prometheus:
    image: prom/prometheus:v2.45.0
    configs:
      - source: prometheus
        target: /etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.enable-remote-write-receiver"
      - "--storage.tsdb.retention.time=30d"
      - "--storage.tsdb.path=/prometheus"
    volumes:
      - /docker-data/prometheus-data:/prometheus
    ports:
      - "9090:9090"
    user: "65534"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.metric-node == true
    networks:
      - observability

  # Grafana (Metrics Visualyzer)
  grafana:
    image: grafana/grafana:10.0.2
    restart: always
    user: "472"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - /docker-data/grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.metric-node == true
    networks:
      - observability

  # Kibana (Logs Visualyzer)
  kibana:
    image: kibana:8.10.1
    environment:
      ELASTICSEARCH_HOST: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.log-node == true
    networks:
      - observability

  # Jaeger (Traces Visualyzer)
  jaeger:
    image: jaegertracing/all-in-one:1.53
    restart: always
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - QUERY_INDEX_TAGS=url.path,http.request.method,http.response.status_code,db.statement
    ports:
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "9411:9411"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.log-node == true
    networks:
      - observability

  # Otel-Collector (Telemetry Data Receiver)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    configs:
      - source: otel-collector-config
        target: /etc/otel-collector-config.yaml
    command:
      - "--config=/etc/otel-collector-config.yaml"
    ports: 
      - target: 4318
        published: 4318
        protocol: tcp
        mode: host
      - target: 13133
        published: 13133
        protocol: tcp
        mode: host
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.collector == true
    networks:
      - observability

configs:
  prometheus:
    external: true
  otel-collector-config:
    external: true
  nginx-config:
    external: true
    
networks:
  observability:
    driver: overlay
